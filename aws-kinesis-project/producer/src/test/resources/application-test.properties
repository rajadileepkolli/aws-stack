
# events inbound
spring.cloud.stream.bindings.consumeEvent-in-0.destination=my-test-stream
spring.cloud.stream.bindings.consumeEvent-in-0.group=my-test-stream-Consumer-Group-1
spring.cloud.stream.bindings.consumeEvent-in-0.content-type=application/json
spring.cloud.stream.bindings.consumeEvent-in-0.consumer.header-mode=none
spring.cloud.stream.bindings.consumeEvent-in-0.consumer.use-native-decoding=true
#defaults to 1, this will process upto 5 messages concurrently, in reactive mode this is not necessary
spring.cloud.stream.bindings.consumeEvent-in-0.consumer.concurrency=5
spring.cloud.stream.kinesis.bindings.consumeEvent-in-0.consumer.listenerMode=batch

spring.cloud.function.definition=consumeEvent;producerSupplier;

#Kinesis-dynamodb-checkpoint
spring.cloud.stream.kinesis.binder.checkpoint.table=spring-stream-metadata
spring.cloud.stream.kinesis.binder.checkpoint.billingMode=provisioned
spring.cloud.stream.kinesis.binder.checkpoint.readCapacity=5
spring.cloud.stream.kinesis.binder.checkpoint.writeCapacity=5

spring.cloud.stream.kinesis.binder.locks.table=spring-stream-lock-registry
spring.cloud.stream.kinesis.binder.locks.billingMode=provisioned
spring.cloud.stream.kinesis.binder.locks.readCapacity=5
spring.cloud.stream.kinesis.binder.locks.writeCapacity=5
